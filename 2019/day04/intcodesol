# Opcodes
# 1: addition
# 2: multiplication
# 3: get input
# 4: write output
# 5: jump if true
# 6: jump if false
# 7: less than
# 8: equals

# write input to positions 0 and 1
3, 0,
3, 1,

mainloop:
7, 1, 0, c,
1105, c: 0, mainend,

    101, 0, 0, c, # copy current number to c
    1101, 10, 0, prev, # prev = 10
    1101, 0, 0, hasd, # hasd = 9

    inner:
    108, 0, c, i,
    1105, i: 0, innerend, # while c != 0

        # divmod via repeated subtraction
        divloop:
        1007, c, 10, lt, # divisor < dividend
        1105, lt: 0, dmend,
            101, -10, c, c,
            101, 1, i, i,
            1105, 1, divloop,
        dmend:

        # c = current digit, i = rest of the number

        7, prev, c, b,
        1105, b: 0, broke,

        8, prev, c, d,
        1106, d: 0, after,
        1101, 1, 0, hasd,
        after:

        101, 0, c, prev,
        101, 0, i, c,
        1105, 1, inner,

    innerend:

    108, 1, hasd, hd,
    1106, hd: 0, broke,

    101, 1, total, total,

    broke:

    101, 1, 0, 0, # increment current number
    1105, 1, mainloop,
mainend:
104, total: 0, # final output
99,

prev: 0, # previous digit
hasd: 0, # has double
